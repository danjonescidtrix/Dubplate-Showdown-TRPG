/*!
 * Dubplate-Showdown-TRPG
 * 
 * 
 * @author Dan Jones
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
document.addEventListener("DOMContentLoaded",function(){"use strict";function e(e){1===d&&(console.log("Round: "+c),n(o,l,e),setTimeout(function(){a(o,l),o.dubRage+=20,l.dubRage+=20,console.log("Round Finished"),console.log("--------------"),c++},2e3))}function t(e,t){return Math.floor(Math.random()*(t-e+1)+e)}function n(e,n,a){var o,l;"defaultAttack"===a&&(o=e.defaultAttack[0],l=e.defaultAttack[1]),"special_1"===a&&(o=e.special_1[0],l=e.special_1[1]);var c=t(o,l);n.health-=c,console.log(e.name+" does "+c+" damage to "+n.name),console.log(n.name+" health is now "+n.health),document.getElementById("p1_health").innerHTML=e.health,document.getElementById("p2_health").innerHTML=n.health,console.log(e.name+" turn over"),console.log(""),n.health<=0&&console.log(n.name+" is dead, game over... "+e.name+" won!"),d=0,m=1}function a(e,n){var a=n.defaultAttack[0],o=n.defaultAttack[1],l=t(a,o);e.health-=l,console.log(n.name+" does "+l+" damage to "+e.name),console.log(e.name+" health is now "+e.health),document.getElementById("p1_health").innerHTML=e.health,document.getElementById("p2_health").innerHTML=n.health,console.log(n.name+" turn over"),e.health<=0&&console.log(e.name+" is dead, game over... "+n.name+" won!"),m=0,d=1}var o,l,c=1,d=1,m=0,h={Simula:{name:"Simula",health:100,dubRage:20,defaultAttack:[16,20],attacks:{special_1:{name:"Nasssty frog synths",attack:[25,30],mannaRequired:100}}},Noisia:{name:"Noisia",health:300,defaultAttack:[10,14],dubRage:50,special_1:{name:"Diplodocus",attack:[25,30],mannaRequired:140}}};o=h.Simula,l=h.Noisia,console.log(o),console.log(l),document.getElementById("p1_name").innerHTML=o.name,document.getElementById("p2_name").innerHTML=l.name,document.getElementById("p1_health").innerHTML=o.health,document.getElementById("p2_health").innerHTML=l.health,document.getElementById("defaultAttack").onclick=function(){e("defaultAttack")}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiaW5pdFJvdW5kIiwiYXR0YWNrVHlwZSIsIlAxX1RVUk4iLCJjb25zb2xlIiwibG9nIiwiUk9VTkQiLCJwbGF5TW92ZSIsIlAxIiwiUDIiLCJzZXRUaW1lb3V0IiwicGxheU1vdmVBSSIsImR1YlJhZ2UiLCJyYW5kb21CZXR3ZWVuIiwibWluIiwibWF4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYXR0YWNrTWluIiwiYXR0YWNrTWF4IiwiZGVmYXVsdEF0dGFjayIsInNwZWNpYWxfMSIsImRhbWFnZSIsImhlYWx0aCIsIm5hbWUiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsIlAyX1RVUk4iLCJjaGFyYWN0ZXJzIiwiU2ltdWxhIiwiYXR0YWNrcyIsImF0dGFjayIsIm1hbm5hUmVxdWlyZWQiLCJOb2lzaWEiLCJvbmNsaWNrIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBQSxTQUFBQyxpQkFBQSxtQkFBQSxXQUVBLFlBMkRBLFNBQUFDLEdBQUFDLEdBQ0EsSUFBQUMsSUFFQUMsUUFBQUMsSUFBQSxVQUFBQyxHQUNBQyxFQUFBQyxFQUFBQyxFQUFBUCxHQUVBUSxXQUFBLFdBQ0FDLEVBQUFILEVBQUFDLEdBQ0FELEVBQUFJLFNBQUEsR0FDQUgsRUFBQUcsU0FBQSxHQUNBUixRQUFBQyxJQUFBLGtCQUNBRCxRQUFBQyxJQUFBLGtCQUNBQyxLQUNBLE1BSUEsUUFBQU8sR0FBQUMsRUFBQUMsR0FDQSxNQUFBQyxNQUFBQyxNQUFBRCxLQUFBRSxVQUFBSCxFQUFBRCxFQUFBLEdBQUFBLEdBSUEsUUFBQVAsR0FBQUMsRUFBQUMsRUFBQVAsR0FFQSxHQUFBaUIsR0FDQUMsQ0FFQSxtQkFBQWxCLElBQ0FpQixFQUFBWCxFQUFBYSxjQUFBLEdBQ0FELEVBQUFaLEVBQUFhLGNBQUEsSUFFQSxjQUFBbkIsSUFDQWlCLEVBQUFYLEVBQUFjLFVBQUEsR0FDQUYsRUFBQVosRUFBQWMsVUFBQSxHQUdBLElBQUFDLEdBQUFWLEVBQUFNLEVBQUFDLEVBQ0FYLEdBQUFlLFFBQUFELEVBRUFuQixRQUFBQyxJQUFBRyxFQUFBaUIsS0FBQSxTQUFBRixFQUFBLGNBQUFkLEVBQUFnQixNQUNBckIsUUFBQUMsSUFBQUksRUFBQWdCLEtBQUEsa0JBQUFoQixFQUFBZSxRQUNBekIsU0FBQTJCLGVBQUEsYUFBQUMsVUFBQW5CLEVBQUFnQixPQUNBekIsU0FBQTJCLGVBQUEsYUFBQUMsVUFBQWxCLEVBQUFlLE9BQ0FwQixRQUFBQyxJQUFBRyxFQUFBaUIsS0FBQSxjQUNBckIsUUFBQUMsSUFBQSxJQUVBSSxFQUFBZSxRQUFBLEdBQ0FwQixRQUFBQyxJQUFBSSxFQUFBZ0IsS0FBQSwwQkFBQWpCLEVBQUFpQixLQUFBLFNBR0F0QixFQUFBLEVBQ0F5QixFQUFBLEVBSUEsUUFBQWpCLEdBQUFILEVBQUFDLEdBRUEsR0FBQVUsR0FBQVYsRUFBQVksY0FBQSxHQUNBRCxFQUFBWCxFQUFBWSxjQUFBLEdBQ0FFLEVBQUFWLEVBQUFNLEVBQUFDLEVBQ0FaLEdBQUFnQixRQUFBRCxFQUVBbkIsUUFBQUMsSUFBQUksRUFBQWdCLEtBQUEsU0FBQUYsRUFBQSxjQUFBZixFQUFBaUIsTUFDQXJCLFFBQUFDLElBQUFHLEVBQUFpQixLQUFBLGtCQUFBakIsRUFBQWdCLFFBQ0F6QixTQUFBMkIsZUFBQSxhQUFBQyxVQUFBbkIsRUFBQWdCLE9BQ0F6QixTQUFBMkIsZUFBQSxhQUFBQyxVQUFBbEIsRUFBQWUsT0FDQXBCLFFBQUFDLElBQUFJLEVBQUFnQixLQUFBLGNBRUFqQixFQUFBZ0IsUUFBQSxHQUNBcEIsUUFBQUMsSUFBQUcsRUFBQWlCLEtBQUEsMEJBQUFoQixFQUFBZ0IsS0FBQSxTQUdBRyxFQUFBLEVBQ0F6QixFQUFBLEVBaklBLEdBQ0FLLEdBRUFDLEVBSEFILEVBQUEsRUFFQUgsRUFBQSxFQUVBeUIsRUFBQSxFQUVBQyxHQUNBQyxRQUNBTCxLQUFBLFNBQ0FELE9BQUEsSUFDQVosUUFBQSxHQUNBUyxlQUNBLEdBQUEsSUFFQVUsU0FDQVQsV0FDQUcsS0FBQSxzQkFDQU8sUUFDQSxHQUFBLElBRUFDLGNBQUEsT0FJQUMsUUFDQVQsS0FBQSxTQUNBRCxPQUFBLElBQ0FILGVBQ0EsR0FBQSxJQUVBVCxRQUFBLEdBQ0FVLFdBQ0FHLEtBQUEsYUFDQU8sUUFDQSxHQUFBLElBRUFDLGNBQUEsTUFLQXpCLEdBQUFxQixFQUFBQyxPQUNBckIsRUFBQW9CLEVBQUFLLE9BRUE5QixRQUFBQyxJQUFBRyxHQUNBSixRQUFBQyxJQUFBSSxHQUVBVixTQUFBMkIsZUFBQSxXQUFBQyxVQUFBbkIsRUFBQWlCLEtBQ0ExQixTQUFBMkIsZUFBQSxXQUFBQyxVQUFBbEIsRUFBQWdCLEtBQ0ExQixTQUFBMkIsZUFBQSxhQUFBQyxVQUFBbkIsRUFBQWdCLE9BQ0F6QixTQUFBMkIsZUFBQSxhQUFBQyxVQUFBbEIsRUFBQWUsT0FFQXpCLFNBQUEyQixlQUFBLGlCQUFBUyxRQUFBLFdBQ0FsQyxFQUFBIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xyXG5cclxuICAndXNlIHN0cmljdCc7XHJcblxyXG4gIC8vLS0tLSBHTE9CQUxTIC0tLS1cclxuICB2YXIgUk9VTkQgPSAxO1xyXG4gIHZhciBQMTtcclxuICB2YXIgUDFfVFVSTiA9IDE7XHJcbiAgdmFyIFAyO1xyXG4gIHZhciBQMl9UVVJOID0gMDtcclxuXHJcbiAgdmFyIGNoYXJhY3RlcnMgPSB7XHJcbiAgICBTaW11bGE6IHtcclxuICAgICAgbmFtZTogJ1NpbXVsYScsXHJcbiAgICAgIGhlYWx0aDogMTAwLFxyXG4gICAgICBkdWJSYWdlOiAyMCxcclxuICAgICAgZGVmYXVsdEF0dGFjazogW1xyXG4gICAgICAgIDE2LCAyMFxyXG4gICAgICBdLFxyXG4gICAgICBhdHRhY2tzOiB7XHJcbiAgICAgICAgc3BlY2lhbF8xOiB7XHJcbiAgICAgICAgICBuYW1lOiAnTmFzc3N0eSBmcm9nIHN5bnRocycsXHJcbiAgICAgICAgICBhdHRhY2s6IFtcclxuICAgICAgICAgICAgMjUsIDMwXHJcbiAgICAgICAgICBdLFxyXG4gICAgICAgICAgbWFubmFSZXF1aXJlZDogMTAwXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgTm9pc2lhOiB7XHJcbiAgICAgIG5hbWU6ICdOb2lzaWEnLFxyXG4gICAgICBoZWFsdGg6IDMwMCxcclxuICAgICAgZGVmYXVsdEF0dGFjazogW1xyXG4gICAgICAgIDEwLCAxNFxyXG4gICAgICBdLFxyXG4gICAgICBkdWJSYWdlOiA1MCxcclxuICAgICAgc3BlY2lhbF8xOiB7XHJcbiAgICAgICAgbmFtZTogJ0RpcGxvZG9jdXMnLFxyXG4gICAgICAgIGF0dGFjazogW1xyXG4gICAgICAgICAgMjUsIDMwXHJcbiAgICAgICAgXSxcclxuICAgICAgICBtYW5uYVJlcXVpcmVkOiAxNDBcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIFAxID0gY2hhcmFjdGVycy5TaW11bGE7XHJcbiAgUDIgPSBjaGFyYWN0ZXJzLk5vaXNpYTtcclxuXHJcbiAgY29uc29sZS5sb2coUDEpO1xyXG4gIGNvbnNvbGUubG9nKFAyKTtcclxuXHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3AxX25hbWUnKS5pbm5lckhUTUwgPSBQMS5uYW1lO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwMl9uYW1lJykuaW5uZXJIVE1MID0gUDIubmFtZTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncDFfaGVhbHRoJykuaW5uZXJIVE1MID0gUDEuaGVhbHRoO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwMl9oZWFsdGgnKS5pbm5lckhUTUwgPSBQMi5oZWFsdGg7XHJcblxyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0QXR0YWNrJykub25jbGljayA9IGZ1bmN0aW9uKCkge1xyXG4gICAgaW5pdFJvdW5kKCdkZWZhdWx0QXR0YWNrJyk7XHJcbiAgfTtcclxuXHJcbiAgZnVuY3Rpb24gaW5pdFJvdW5kKGF0dGFja1R5cGUpIHtcclxuICAgIGlmIChQMV9UVVJOID09PSAxKSB7XHJcblxyXG4gICAgICBjb25zb2xlLmxvZygnUm91bmQ6ICcgKyBST1VORCk7XHJcbiAgICAgIHBsYXlNb3ZlKFAxLCBQMiwgYXR0YWNrVHlwZSk7XHJcblxyXG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHBsYXlNb3ZlQUkoUDEsIFAyKTtcclxuICAgICAgICBQMS5kdWJSYWdlICs9IDIwO1xyXG4gICAgICAgIFAyLmR1YlJhZ2UgKz0gMjA7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1JvdW5kIEZpbmlzaGVkJyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLS0tJyk7XHJcbiAgICAgICAgUk9VTkQrKztcclxuICAgICAgfSwgMjAwMCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByYW5kb21CZXR3ZWVuKG1pbiwgbWF4KSB7XHJcbiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpICsgbWluKTtcclxuICB9XHJcblxyXG4gIC8vcGxheWVyIHBsYXlzIHRoZSBtb3ZlXHJcbiAgZnVuY3Rpb24gcGxheU1vdmUoUDEsIFAyLCBhdHRhY2tUeXBlKSB7XHJcblxyXG4gICAgdmFyIGF0dGFja01pbjtcclxuICAgIHZhciBhdHRhY2tNYXg7XHJcblxyXG4gICAgaWYgKGF0dGFja1R5cGUgPT09ICdkZWZhdWx0QXR0YWNrJykge1xyXG4gICAgICBhdHRhY2tNaW4gPSBQMS5kZWZhdWx0QXR0YWNrWzBdO1xyXG4gICAgICBhdHRhY2tNYXggPSBQMS5kZWZhdWx0QXR0YWNrWzFdO1xyXG4gICAgfVxyXG4gICAgaWYgKGF0dGFja1R5cGUgPT09ICdzcGVjaWFsXzEnKSB7XHJcbiAgICAgIGF0dGFja01pbiA9IFAxLnNwZWNpYWxfMVswXTtcclxuICAgICAgYXR0YWNrTWF4ID0gUDEuc3BlY2lhbF8xWzFdO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBkYW1hZ2UgPSByYW5kb21CZXR3ZWVuKGF0dGFja01pbiwgYXR0YWNrTWF4KTtcclxuICAgIFAyLmhlYWx0aCAtPSBkYW1hZ2U7XHJcblxyXG4gICAgY29uc29sZS5sb2coUDEubmFtZSArICcgZG9lcyAnICsgZGFtYWdlICsgJyBkYW1hZ2UgdG8gJyArIFAyLm5hbWUpO1xyXG4gICAgY29uc29sZS5sb2coUDIubmFtZSArICcgaGVhbHRoIGlzIG5vdyAnICsgUDIuaGVhbHRoKTtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwMV9oZWFsdGgnKS5pbm5lckhUTUwgPSBQMS5oZWFsdGg7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncDJfaGVhbHRoJykuaW5uZXJIVE1MID0gUDIuaGVhbHRoO1xyXG4gICAgY29uc29sZS5sb2coUDEubmFtZSArICcgdHVybiBvdmVyJyk7XHJcbiAgICBjb25zb2xlLmxvZygnJyk7XHJcblxyXG4gICAgaWYgKFAyLmhlYWx0aCA8PSAwKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFAyLm5hbWUgKyAnIGlzIGRlYWQsIGdhbWUgb3Zlci4uLiAnICsgUDEubmFtZSArICcgd29uIScpO1xyXG4gICAgfVxyXG5cclxuICAgIFAxX1RVUk4gPSAwO1xyXG4gICAgUDJfVFVSTiA9IDE7XHJcbiAgfVxyXG5cclxuICAvL0FJIHBsYXlzIHRoZSBtb3ZlXHJcbiAgZnVuY3Rpb24gcGxheU1vdmVBSShQMSwgUDIpIHtcclxuICAgIC8vcGljayByYW5kb21lIG1vYmUgdGhlblxyXG4gICAgdmFyIGF0dGFja01pbiA9IFAyLmRlZmF1bHRBdHRhY2tbMF07XHJcbiAgICB2YXIgYXR0YWNrTWF4ID0gUDIuZGVmYXVsdEF0dGFja1sxXTtcclxuICAgIHZhciBkYW1hZ2UgPSByYW5kb21CZXR3ZWVuKGF0dGFja01pbiwgYXR0YWNrTWF4KTtcclxuICAgIFAxLmhlYWx0aCAtPSBkYW1hZ2U7XHJcblxyXG4gICAgY29uc29sZS5sb2coUDIubmFtZSArICcgZG9lcyAnICsgZGFtYWdlICsgJyBkYW1hZ2UgdG8gJyArIFAxLm5hbWUpO1xyXG4gICAgY29uc29sZS5sb2coUDEubmFtZSArICcgaGVhbHRoIGlzIG5vdyAnICsgUDEuaGVhbHRoKTtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwMV9oZWFsdGgnKS5pbm5lckhUTUwgPSBQMS5oZWFsdGg7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncDJfaGVhbHRoJykuaW5uZXJIVE1MID0gUDIuaGVhbHRoO1xyXG4gICAgY29uc29sZS5sb2coUDIubmFtZSArICcgdHVybiBvdmVyJyk7XHJcblxyXG4gICAgaWYgKFAxLmhlYWx0aCA8PSAwKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFAxLm5hbWUgKyAnIGlzIGRlYWQsIGdhbWUgb3Zlci4uLiAnICsgUDIubmFtZSArICcgd29uIScpO1xyXG4gICAgfVxyXG5cclxuICAgIFAyX1RVUk4gPSAwO1xyXG4gICAgUDFfVFVSTiA9IDE7XHJcbiAgfVxyXG59KTtcclxuIl19
