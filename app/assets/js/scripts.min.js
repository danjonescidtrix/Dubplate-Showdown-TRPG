/*!
 * Dubplate-Showdown-TRPG
 * 
 * 
 * @author Dan Jones
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
document.addEventListener("DOMContentLoaded",function(){"use strict";function e(e,t){console.log("Round: "+l),d=0,u=1,console.log(o),console.log(c),a(e,t,o,c);var s=["attackMove","defenceMove"],i=s[Math.floor(Math.random()*s.length)];switch(i){case"attackMove":var h=[];Object.keys(c.attacks).forEach(function(e,a){h.push(e)});for(var m=n(h),r=m.length,g=0;g<r;g++){var k=m[g];if(c.dubRage>=o.attacks[k].dubRageRequired){e=k,a(e,t,c,o);break}}break;case"defenceMove":console.log(c.name+" uses defence.")}o.dubRage+=20,c.dubRage+=20,console.log("Round Finished"),console.log("--------------"),l++,d=1,u=0}function a(e,a,n,o){var c,l,d,u,s;e&&(c=n.attacks[e].attack[0],l=n.attacks[e].attack[1],s=t(c,l),d=n.attacks[e].name,u=n.attacks[e].dubRageRequired,o.health-=s,n.dubRage-=u,document.getElementById("p1_health").innerHTML=n.health,document.getElementById("p2_health").innerHTML=o.health,console.log(n.name+" uses "+d),console.log(n.name+" does "+s+" damage to "+o.name),console.log(o.name+" health is now "+o.health)),a&&(s=0),console.log(n.name+" turn over"),console.log(""),o.health<=0&&console.log(o.name+" is dead, game over... "+n.name+" won!")}function t(e,a){return Math.floor(Math.random()*(a-e+1)+e)}function n(e){for(var a=e.length-1;a>0;a--){var t=Math.floor(Math.random()*(a+1)),n=e[a];e[a]=e[t],e[t]=n}return e}var o,c,l=1,d=1,u=0,s={Simula:{name:"Simula",health:100,attacks:{defaultAttack:{name:"Standard Attack",attack:[10,14],dubRageRequired:0},special1:{name:"Nasssty frog synths",attack:[25,30],dubRageRequired:50}},dubRage:0},Noisia:{name:"Noisia",health:300,attacks:{defaultAttack:{name:"Standard Attack",attack:[10,14],dubRageRequired:0},special1:{name:"Diplodoucus",attack:[25,30],dubRageRequired:100}},dubRage:0}};o=s.Simula,c=s.Noisia,document.getElementById("p1_name").innerHTML=o.name,document.getElementById("p2_name").innerHTML=c.name,document.getElementById("p1_health").innerHTML=o.health,document.getElementById("p2_health").innerHTML=c.health,document.getElementById("defaultAttack").onclick=function(){1===d&&e("defaultAttack","")},document.getElementById("special1").onclick=function(){1===d&&(o.dubRage>=o.attacks.special1.dubRageRequired?e("special1",""):console.log("You dont have enough Dub Rage for this move."))}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
