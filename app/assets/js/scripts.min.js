/*!
 * Dubplate-Showdown-TRPG
 * 
 * 
 * @author Dan Jones
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
document.addEventListener("DOMContentLoaded",function(){"use strict";function e(e,t){console.log("Round: "+d),u=0,s=1,console.log(c),console.log(l),a(e,t,c,l);var i=["attackMove","defenceMove"],h=i[Math.floor(Math.random()*i.length)];switch(h){case"attackMove":var m=[];Object.keys(l.attacks).forEach(function(e,a){m.push(e)});for(var r=n(m),g=r.length,k=0;k<g;k++){var f=r[k];if(l.dubRage>=c.attacks[f].dubRageRequired){e=f,a(e,t,l,c);break}}break;case"defenceMove":console.log(l.name+" uses defence.")}c.dubRage+=20,l.dubRage+=20,console.log("Round Finished"),console.log("--------------"),o(),d++,u=1,s=0}function a(e,a,n,o){var c,l,d,u,s;e&&(c=n.attacks[e].attack[0],l=n.attacks[e].attack[1],s=t(c,l),d=n.attacks[e].name,u=n.attacks[e].dubRageRequired,o.health-=s,n.dubRage-=u,console.log(n.name+" uses "+d),console.log(n.name+" does "+s+" damage to "+o.name),console.log(o.name+" health is now "+o.health)),a&&(s=0),console.log(n.name+" turn over"),console.log(""),o.health<=0&&console.log(o.name+" is dead, game over... "+n.name+" won!")}function t(e,a){return Math.floor(Math.random()*(a-e+1)+e)}function n(e){for(var a=e.length-1;a>0;a--){var t=Math.floor(Math.random()*(a+1)),n=e[a];e[a]=e[t],e[t]=n}return e}function o(){document.getElementById("p1_health").innerHTML=c.health,document.getElementById("p2_health").innerHTML=l.health}var c,l,d=1,u=1,s=0,i={Simula:{name:"Simula",health:100,attacks:{defaultAttack:{name:"Standard Attack",attack:[10,14],dubRageRequired:0},special1:{name:"Nasssty frog synths",attack:[25,30],dubRageRequired:50}},dubRage:0},Noisia:{name:"Noisia",health:300,attacks:{defaultAttack:{name:"Standard Attack",attack:[10,14],dubRageRequired:0},special1:{name:"Diplodoucus",attack:[25,30],dubRageRequired:100}},dubRage:0}};c=i.Simula,l=i.Noisia,document.getElementById("p1_name").innerHTML=c.name,document.getElementById("p2_name").innerHTML=l.name,document.getElementById("p1_health").innerHTML=c.health,document.getElementById("p2_health").innerHTML=l.health,document.getElementById("defaultAttack").onclick=function(){1===u&&e("defaultAttack","")},document.getElementById("special1").onclick=function(){1===u&&(c.dubRage>=c.attacks.special1.dubRageRequired?e("special1",""):console.log("You dont have enough Dub Rage for this move."))}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
