/*!
 * Dubplate-Showdown-TRPG
 * 
 * 
 * @author Dan Jones
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
document.addEventListener("DOMContentLoaded",function(){"use strict";function a(a){console.log("Round: "+o),d=0,s=1,console.log(c),console.log(l),t(c,l,a),setTimeout(function(){n(c,l),c.dubRage+=20,l.dubRage+=20,console.log("Round Finished"),console.log("--------------"),o++,d=1,s=0},2e3)}function e(a,e){return Math.floor(Math.random()*(e-a+1)+a)}function t(a,t,n){var c,l,o,d;switch(n){case"defaultAttack":c=a.attacks.defaultAttack.attack[0],l=a.attacks.defaultAttack.attack[1],o=a.attacks.defaultAttack.name+" (Standard)",d=a.attacks.defaultAttack.dubRageRequired;break;case"special1":c=a.attacks.special1.attack[0],l=a.attacks.special1.attack[1],o=a.attacks.special1.name+" (Special)",d=a.attacks.special1.dubRageRequired}var s=e(c,l);t.health-=s,a.dubRage-=d,console.log(a.name+" uses "+o),console.log(a.name+" does "+s+" damage to "+t.name),console.log(t.name+" health is now "+t.health),document.getElementById("p1_health").innerHTML=a.health,document.getElementById("p2_health").innerHTML=t.health,console.log(a.name+" turn over"),console.log(""),t.health<=0&&console.log(t.name+" is dead, game over... "+a.name+" won!")}function n(a,t){var n,c,l,o=["defaultAttack","special1"],d=o[Math.floor(Math.random()*o.length)];switch(d){case"defaultAttack":n=t.attacks.defaultAttack.attack[0],c=t.attacks.defaultAttack.attack[1],l=t.attacks.defaultAttack.name+" (Standard)";break;case"special1":n=t.attacks.special1.attack[0],c=t.attacks.special1.attack[1],l=t.attacks.special1.name+" (Special)"}var s=e(n,c);a.health-=s,console.log(t.name+" uses "+l),console.log(t.name+" does "+s+" damage to "+a.name),console.log(a.name+" health is now "+a.health),document.getElementById("p1_health").innerHTML=a.health,document.getElementById("p2_health").innerHTML=t.health,console.log(t.name+" turn over"),a.health<=0&&console.log(a.name+" is dead, game over... "+t.name+" won!")}var c,l,o=1,d=1,s=0,u={Simula:{name:"Simula",health:100,attacks:{defaultAttack:{name:"Standard Attack",attack:[10,14],dubRageRequired:0},special1:{name:"Nasssty frog synths",attack:[25,30],dubRageRequired:50}},dubRage:0},Noisia:{name:"Noisia",health:300,attacks:{defaultAttack:{name:"Standard Attack",attack:[10,14],dubRageRequired:0},special1:{name:"Diplodoucus",attack:[25,30],dubRageRequired:100}},dubRage:0}};c=u.Simula,l=u.Noisia,document.getElementById("p1_name").innerHTML=c.name,document.getElementById("p2_name").innerHTML=l.name,document.getElementById("p1_health").innerHTML=c.health,document.getElementById("p2_health").innerHTML=l.health,document.getElementById("defaultAttack").onclick=function(){1===d&&a("defaultAttack")},document.getElementById("special1").onclick=function(){1===d&&(c.dubRage>=c.attacks.special1.dubRageRequired?a("special1"):console.log("You dont have enough Dub Rage for this move."))}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
