// -----------------------------
// Positioning 
// -----------------------------
@mixin centerAlign {
    /* Must have parent with relative positioning */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin centerBlock {
    display: block;
    margin-left: auto;
    margin-right: auto;
}
// Button sizes
@mixin min-width($minWidth) {
    min-width: $minWidth;
}
// -----------------------------
// Media Query Mixin 
// e.g:
//	.class {
//		@include breakpoint(sm) {
//			>sm specific styles
//		}
//	}
// -----------------------------
@mixin breakpoint($min: 0, $max: 0) {
    $type: type-of($min);
    @if $type==string {
         @if $min==iPhone4{
            @media (max-width: 480px) {
                 @content;
            }
            // Iphone 4 width and below
        }
        @else if $min==xxs {
             @media (max-width: 568px){
                @content;
            }
            // Iphone 5 and below
        }
        @else if $min==xs {
             @media (max-width: 767px){
                @content;
            }
            // Mobile Devices
        }
        @else if $min==sm {
             @media (max-width: 768px){
                @content;
            }
            // Tablet Devices
        }
        @else if $min==md {
             @media (max-width: 992px){
                @content;
            }
            // Desktops
        }
        @else if $min==lg {
             @media (max-width: 1200px){
                @content;
            }
            // Widescreen Desktops
        }
        @else if $min==lp {
             @media (max-width: 1366px){
                @content;
            }
            // Widescreen Desktops
        }
        @else if $min==ipadL {
             @media (max-width: 1025px){
                @content;
            }
            // iPad Landscape
        }
        @else if $min==ipadP {
             @media (max-width: 769px){
                @content;
            }
            // iPad Portrait
        }
        // Otherwise pass a warning to the compiler as to the appropriate options
        @else {
             @warn"The breakpoint mixin supports the following attributes: xxs, xs, sm, md, lg";
        }
    }
    @else if $type==number {
        // Allow for custom parameters for min and max size
        $query: "all" !default;
        @if $min !=0 and $max !=0 {
            $query: "(min-width: #{$min}) and (max-width: #{$max})";
        }
        // set both min and max
        @else if $min !=0 and $max==0 {
            $query: "(min-width: #{$min})";
        }
        // set just min
        @else if $min==0 and $max !=0 {
            $query: "(max-width: #{$max})";
        }
        // set just max
        @media #{$query} {
             @content;
        }
    }
}
// ---------------
// Containers
// -----------------
//.container {
//    width: 80%;
//    @include breakpoint(1440px, 0px) {
//        width: 41% !important;
//    }
//    @include breakpoint(0px, 1440px) {
//        width: 56% !important;
//    }
//    @include breakpoint(0px, 1366px){
//        width: 58% !important;
//    }    
//}